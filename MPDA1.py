import pandas as pd
import numpy as np
import os
import matplotlib.pyplot as plt
import seaborn as sns
from scipy import stats
from sklearn.linear_model import LinearRegression
downloads_path = os.path.expanduser("~/Downloads/sala.csv")
df = pd.read_csv(downloads_path)
print(df.head())
print(df.info())
print("Missing values per column:")
print(df.isnull().sum())
for col in ['Age', 'Years of Experience', 'Salary']:
    df[col] = df[col].fillna(df[col].median())
for col in ['Gender', 'Education Level', 'Job Title']:
    df[col] = df[col].fillna(df[col].mode()[0])
print("Missing values after fillna:")
print(df.isnull().sum())
plt.figure(figsize=(8, 6))
sns.scatterplot(data=df, x='Years of Experience', y='Salary')
plt.title("Salary vs. Years of Experience")
plt.xlabel("Years of Experience")
plt.ylabel("Salary ")
plt.show()
numeric_cols = ['Age', 'Years of Experience', 'Salary']
df["Job Title"] = df["Job Title"].str.contains("Software Developer|Data Analyst", case=False).map({True: "Software", False: "Other"})
plt.figure(figsize=(8, 6))
sns.boxplot(data=df, x="Job Title", y="Salary")
plt.title("Salary Distribution by Job Title")
plt.xlabel("Job Title")
plt.ylabel("Salary ")
plt.show()
plt.figure(figsize=(8,6))
sns.heatmap(df[numeric_cols].corr(), annot=True, cmap='coolwarm')
plt.title('Correlation Heatmap')
plt.show()
plt.figure(figsize=(8,6))
sns.heatmap(df[numeric_cols].corr(), annot=True, cmap='coolwarm')
plt.title('Correlation Heatmap')
plt.show()
education_levels = df['Education Level'].unique()
for i in range(len(education_levels)):
    for j in range(i + 1, len(education_levels)):
        group1 = df[df['Education Level'] == education_levels[i]]['Salary']
        group2 = df[df['Education Level'] == education_levels[j]]['Salary']
        t_stat, p_value = stats.ttest_ind(group1, group2, nan_policy='omit')
        print(f"T-test between {education_levels[i]} and {education_levels[j]}: t-statistic = {t_stat}, p-value = {p_value}")
        # Visualization: Bar plot for average salary by education level
        plt.figure(figsize=(8, 6))
        avg_salary_by_education = df.groupby('Education Level')['Salary'].mean().sort_values()
        sns.barplot(x=avg_salary_by_education.index, y=avg_salary_by_education.values, palette='viridis')
        plt.title("Average Salary by Education Level")
        plt.xlabel("Education Level")
        plt.ylabel("Average Salary")
        plt.xticks(rotation=45)
        plt.show()
        plt.figure(figsize=(6, 6))
        gender_counts = df['Gender'].value_counts()
        plt.pie(gender_counts, labels=gender_counts.index, autopct='%1.1f%%', startangle=140, colors=sns.color_palette('pastel'))
        plt.title("Gender Distribution")
        plt.show()
        plt.figure(figsize=(8, 6))
        salary_trends = df.groupby('Years of Experience')['Salary'].mean()
        sns.lineplot(x=salary_trends.index, y=salary_trends.values, marker='o', color='blue')
        plt.title("Salary Trends by Years of Experience")
        plt.xlabel("Years of Experience")
        plt.ylabel("Average Salary")
        plt.show()
        plt.figure(figsize=(8, 6))
        sns.scatterplot(data=df, x='Years of Experience', y='Salary', hue='Seniority', palette='coolwarm')
        plt.title("Salary vs. Years of Experience with Seniority")
        plt.xlabel("Years of Experience")
        plt.ylabel("Salary")
        plt.legend(title="Seniority")
        plt.show()
        plt.figure(figsize=(8, 6))
        sns.boxplot(data=df, x="Job Title", y="Salary", palette="Set2")
        plt.title("Salary Distribution by Job Title")
        plt.xlabel("Job Title")
        plt.ylabel("Salary")
        plt.show()
        plt.figure(figsize=(8, 6))
        avg_salary_by_education = df.groupby('Education Level')['Salary'].mean().sort_values()
        sns.barplot(x=avg_salary_by_education.index, y=avg_salary_by_education.values, palette='viridis')
        plt.title("Average Salary by Education Level")
        plt.xlabel("Education Level")
        plt.ylabel("Average Salary")
        plt.xticks(rotation=45)
        plt.show()
        plt.figure(figsize=(8, 6))
        sns.boxplot(data=df, x=pd.cut(df['Age'], bins=5), y='Salary', palette='coolwarm')
        plt.title("Salary Distribution by Age")
        plt.xlabel("Age Groups")
        plt.ylabel("Salary")
        plt.show()
        plt.figure(figsize=(8, 6))
        sns.heatmap(df[numeric_cols].corr(), annot=True, cmap='coolwarm', fmt=".2f")
        plt.title("Correlation Matrix of Numerical Variables")
        plt.show()
        